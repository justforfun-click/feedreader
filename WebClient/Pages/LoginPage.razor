@page "/login"
@page "/login/{action}"

@inject IJSRuntime JsRuntime
@inject LocalUser LocalUser
@inject LogService Logger
@inject NavigationManager Navigation

@if (LocalUser.IsAuthorized)
{
    Navigation.NavigateTo("/");
}
else if (Action != null)
{
    IsLogining = true;
}
else
{
    IsLogining = false;
}

<MainLayout>
    <div class="login-page" style="cursor: @(IsLogining ? "wait" : "default")">
        <div class="wrapper">
            @if (IsLogining)
            {
                <WaitingPage Text="Logining..."/>
            }
            else
            {
                <div class="banner">
                    <img src="/img/iconfinder_news-car-announcement-advertisement-broadcast_4313131.svg"/>
                    <img src="/img/iconfinder_Health_Education-Article-Smartphone-Knowledge-Blog_5959004.svg"/>
                    <img src="/img/iconfinder_IntelligentlyConsumeSocialMedia-fakenews-lie-news-socialmedia-covid19_6141534.svg"/>
                </div>
                <div class="error">
                    @Error
                </div>
                <div class="login-providers">
                    <a class="microsoft" href="@LocalUser.GetMsLoginUri(Navigation.ToAbsoluteUri("/login/ms-callback").ToString())">
                        <img src="/img/iconfinder_Microsoft_381606.svg"/> Login with <b>Microsoft</b> account
                    </a>
                    <a class="microsoft" href="@LocalUser.GetGoogleLoginUri(Navigation.ToAbsoluteUri("/login/google-callback").ToString())">
                        <img src="/img/iconfinder_2_939729.svg"/> Login with <b>Google</b> account
                    </a>
                </div>
            }
        </div>
    </div>
</MainLayout>

@code
{
    [Parameter]
    public string Action { get; set; }

    private string Error { get; set; }

    private bool IsLogining { get; set; }

    protected override async Task OnInitializedAsync()
    {
        switch (Action)
        {
        case null:
            break;

        case "ms-callback":
            if (await LocalUser.LoginWithMsCallbacAsync(Navigation.Uri))
            {
                Logger.Info("Login success.");
                Navigation.NavigateTo("/");
            }
            else
            {
                Error = "Login with Microsoft account failed. Please try it again.";
                Navigation.NavigateTo("/login");
            }
            break;

        case "google-callback":
            if (await LocalUser.LoginWithGoogleCallbackAsync(Navigation.Uri))
            {
                Logger.Info("Loggin success.");
                Navigation.NavigateTo("/");
            }
            else
            {
                Error = "Login with Google account failed. Please try it again.";
                Navigation.NavigateTo("/login");
            }
            break;

        default:
            Logger.Error($"Invalid action: {Action}.");
            Navigation.NavigateTo("/login");
            break;
        }

        IsLogining = false;
    }
}
